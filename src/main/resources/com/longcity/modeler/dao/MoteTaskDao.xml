<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longcity.modeler.dao.MoteTaskDao" >
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mote_task
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="MoteTask" useGeneratedKeys="true" keyProperty="id">
    insert into mote_task ( user_id, task_id, 
      create_time, update_time, order_no, 
      express_company_id, express_no, self_buy_fee, 
      status,accepted_time)
    values (#{userId}, #{taskId}, 
      now(), now(), #{orderNo}, 
      #{expressCompanyId}, #{expressNo}, #{selfBuyFee}, 
      #{status},now())
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="MoteTask" >
    update mote_task
    set user_id = #{userId},
      task_id = #{taskId},
      update_time = now(),
      order_no = #{orderNo},
      express_company_id = #{expressCompanyId},
      express_no = #{expressNo},
      self_buy_fee = #{selfBuyFee},
      status = #{status},
      finish_status = #{finishStatus}
    where id = #{id}
  </update>
  
  <update id="acceptTask" parameterType="MoteTask" >
    update mote_task
    set 
      accepted_time = now(),
      update_time = now(),
      status = #{status}
    where id = #{id}
  </update>
  
  
  <delete id="cancelFollowTask" >
    delete from mote_task
    where user_id = #{param1} and task_id = #{param2}
  </delete>
  
  
  
  
  
  <update id="addOrderNo" >
    update mote_task
    set 
      update_time = now(),
      order_no_time = now(),
      order_no = #{orderNo},
      status = 2
    where id = #{moteTaskId}
  </update>
  
    <update id="updateStatus" >
    update mote_task
    set 
      update_time = now(),
      status = #{param2}
    where id = #{param1}
  </update>
  
  
  
  <update id="finishShowPic" >
    update mote_task
    set  
     status = 3,
     show_pic_time=now(),
     update_time = now()
    where id = #{moteTaskId}
  </update>
  
  <update id="uploadImg" >
    update mote_task
    set  
     status = 4,
     upload_pic_time=now(),
     update_time = now()
    where id = #{moteTaskId}
  </update>
  
  
  <update id="selfBuy" >
    update mote_task
    set  
     self_buy_fee = #{fee},
     status = 5,
     self_buy_time =now(),
     update_time = now()
    where id = #{moteTaskId}
  </update>
  
  <update id="returnItem" >
    update mote_task
    set  
     express_company_id = #{expressCompanyId},
     express_no = #{expressNo},
     status = 6,
     return_item_time =now(),
     update_time = now()
    where id = #{moteTaskId}
  </update>
  
  <update id="verifyReturnItem" >
    update mote_task
    set
     self_buy_fee = #{fee},  
     status = 8,
     update_time = now()
    where id = #{moteTaskId}
  </update>
  
  
  
  
  
  
  <select id="selectByPrimaryKey" resultType="MoteTask" parameterType="java.lang.Integer" >
    select *
    from mote_task
    where id = #{id}
  </select>
  

  <select id="stasticByTaskIds" resultType="TaskVO" parameterType="map" >
    select t.id,t.create_time,t.title,
        t.number as  total_num,
		sum(case when mt.status >=1 then 1 else 0 end) as accpeted_num,
		sum(case when mt.status >=2 then 1 else 0 end) as ordered_num,
		sum(case when mt.status >=3 then 1 else 0 end) as finish_show_num,
		sum(case when mt.status >=4 then 1 else 0 end) as upload_img_num,
		sum(case when mt.status =5 then 1 else 0 end) as self_buy_num,
		sum(case when mt.status =6 then 1 else 0 end) as return_num,
		sum(case when mt.status =7 then 1 else 0 end) as kefu_num,
		sum(case when mt.finish_status =1 then 1 else 0 end) as finished_num
    from task t left join mote_task mt on (mt.task_id=t.id)
	where  t.status=#{status}
	   and t.id in 
	    <foreach item="item" index="index" collection="taskIds" open="(" separator="," close=")">  
	  			#{item}  
	    </foreach>
	group by t.id,t.create_time,t.title,total_num  
	order by t.id desc  
  </select>
  
    <select id="getMoteListByTaskId" resultType="MoteTaskVO" parameterType="map" >
	    select mt.id,u.nickname,mt.order_no,mt.status,mt.finish_status from mote_task mt,user u
        where mt.user_id=u.id and mt.task_id=#{taskId}
        limit #{start},#{pageSize}
    </select>
    
    <select id="countMoteListByTaskId" resultType="int" >
	    select ifnull(count(1),0)
         from mote_task mt,user u
        where mt.user_id=u.id and mt.task_id=#{param1}
    </select>
    
    <select id="countByMoteId" resultType="int" >
	    select ifnull(count(1),0)
        from mote_task mt,task t
        where t.id=mt.task_id and mt.user_id=#{param1}
    </select>
    
    <select id="queryListByMoteId" resultType="MoteDetailVO" parameterType="map">
	    select mt.id,t.title,t.price,t.shot_fee,t.self_buy_off,mt.status,mt.create_time
        from mote_task mt,task t
        where t.id=mt.task_id and mt.user_id=#{moteId}
        order by mt.id desc
        limit #{start},#{pageSize} 
    </select>
    
    
    
    <select id="getTop1Mote" resultType="MoteTaskVO" >
	    select u.nickname,sum(t.shot_fee) as total_task_fee
         from mote_task mt,user u,task t
        where mt.user_id=u.id and t.id=mt.task_id and mt.finish_status=1
        group by u.nickname
        order by total_task_fee desc 
        limit 1
    </select>
    
    
    
  <select id="getAcceptList" resultType="MoteTask" parameterType="java.lang.Integer" >
    select *
    from mote_task
    where id > #{param1} and status = 1
    order by id asc
    limit 50
  </select>
  
  <select id="getReturnItemList" resultType="MoteTask" parameterType="java.lang.Integer" >
    select *
    from mote_task
    where id > #{param1} and status = 6
    order by id asc
    limit 50
  </select>
  
  
  
  <select id="getTotalAcceptedNum" resultType="int" parameterType="java.lang.Integer" >
    select ifnull(count(1),0)
    from mote_task
    where task_id=#{param1} and status in (1,2,3,4,5,6,7,8)
  </select>
  
  <select id="getMoteAcceptedNumDaily" resultType="int" parameterType="java.lang.Integer" >
    select ifnull(count(1),0)
    from mote_task
    where user_id=#{param1} and date(accepted_time) = curdate()
  </select>
  
  <select id="getMoteTaskNumBySellerId" resultType="int" parameterType="java.lang.Integer" >
    select ifnull(sum(number),0)
    from task t
    where t.user_id=#{param1}
  </select>
  
  <select id="getMoteTaskNumByMoteId" resultType="int" parameterType="java.lang.Integer" >
    select ifnull(count(1),0)
    from mote_task mt
    where mt.user_id=#{param1} and mt.finish_status =1
  </select>
  
  <select id="getMoteTaskTotalFeeBySellerId" resultType="int" parameterType="java.lang.Integer" >
    select ifnull(sum(shot_fee),0)
    from mote_task mt,task t
    where t.user_id=#{param1} and mt.task_id=t.id and mt.status in (2,3,4,5,6,7,8)
  </select>
  
  <select id="getMoteTaskTotalFeeByMoteId" resultType="int" parameterType="java.lang.Integer" >
    select sum(shot_fee)
    from mote_task mt,task t
    where t.user_id=#{param1} and mt.task_id=t.id and mt.finish_status =1
  </select>
  
  <select id="getPerformMoteTaskNum" resultType="int" >
    select ifnull(count(1),0)
    from mote_task mt
    where mt.user_id=#{param1}  and mt.finish_status =0 and mt.status in (1,2,3,4,5,6,7,8)
  </select>
  
    <select id="getKefuMoteTaskNum" resultType="int" >
    select ifnull(count(1),0)
    from mote_task mt
    where mt.user_id=#{param1}  and mt.finish_status =0 and mt.status = 7
  </select>
  
  <select id="get15DaysList" resultType="int" >
    select distinct mt.task_id
    from mote_task mt
    where mt.user_id=#{param1} and TO_DAYS(NOW()) - TO_DAYS(create_time) &lt;= 15 
  </select>
  
  <select id="getAcceptedTaskIdList" resultType="int" >
    select distinct mt.task_id
    from mote_task mt
    where mt.user_id=#{param1} 
  </select>
  
    <select id="getUnFinishNumByMoteId" resultType="int" >
    select ifnull(count(1),0)
    from mote_task mt
    where mt.user_id=#{param1} and status in (1,2,3,4)
  </select>
  
 <select id="queryByMoteIdAndTaskId" resultType="MoteTask" >
    select *
    from mote_task mt
    where user_id=#{param1} and task_id = #{param2}
  </select>
  
  <select id="countAcceptedTaskList" resultType="int" parameterType="map">
    select ifnull(count(1),0)
    from mote_task mt,task t
    where mt.task_id=t.id and mt.user_id=#{userId} 
    <if test="type!=null and type==0">
            AND mt.status = 0
    </if>
    <if test="type!=null and type==1">
            AND mt.status in (1,2,3,4,5,6)
    </if>
    <if test="type!=null and type==2">
            AND mt.finish_status = 1
    </if>
    <if test="type!=null and type==3">
            AND mt.status = 7
    </if>
  </select>
  
  <select id="getAcceptedTaskList" resultType="Task" parameterType="map">
    select mt.id,t.user_id,t.title,t.url,t.price,t.shot_fee,t.img_url,t.self_buy_off
    from mote_task mt,task t
    where mt.task_id=t.id and mt.user_id=#{userId}
    <if test="type!=null and type==0">
            AND mt.status = 0
    </if> 
    <if test="type!=null and type==1">
            AND mt.status in (1,2,3,4,5,6,7,8) and mt.finish_status = 0
    </if>
    <if test="type!=null and type==2">
            AND mt.finish_status = 1
    </if>
    <if test="type!=null and type==3">
            AND mt.status = 7
    </if>
    order by mt.id desc
    limit #{start},#{pageSize}
  </select>
  
  <update id="finishMoteTask" >
    update mote_task
    set
     finish_status = 1,
     update_time = now(),
     finish_status_time = now()
    where id = #{param1}
  </update>
  
</mapper>