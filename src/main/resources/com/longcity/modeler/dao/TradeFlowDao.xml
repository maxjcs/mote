<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longcity.modeler.dao.TradeFlowDao" >
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from trade_flow
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="TradeFlow" useGeneratedKeys="true" keyProperty="id">
    insert into trade_flow (refer_id, type, 
      money, create_time, user_id
      )
    values (#{referId}, #{type}, 
      #{moneyFen}, now(), #{userId}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="TradeFlow" >
    update trade_flow
    set refer_id = #{referId},
      type = #{type},
      money = #{money},
      user_id = #{userId}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultType="TradeFlow" parameterType="java.lang.Integer" >
    select id, refer_id, type, money, create_time, user_id
    from trade_flow
    where id = #{id}
  </select>
  
  <select id="getTaskIncomeList" resultType="TradeFlowVO" parameterType="map" >
    select  tf.refer_id, tf.type, tf.money, tf.create_time, tf.user_id,t.img_url as url,mt.create_time as accept_time
    from trade_flow tf,mote_task mt,task t
    where tf.user_id =#{userId} and mt.task_id= t.id and tf.refer_id=mt.id and tf.type=0
    order by tf.id desc
    limit #{start},#{pageSize}
  </select>
  
  <select id="countTaskIncomeList" resultType="int" parameterType="map" >
    select  ifnull(count(1),0)
    from trade_flow tf,mote_task mt,task t
    where tf.user_id =#{userId} and mt.task_id= t.id and tf.refer_id=mt.id and tf.type=0
  </select>
  
    <select id="getItemMoneyList" resultType="TradeFlowVO" parameterType="map" >
    select  tf.refer_id, tf.type, tf.money, tf.create_time, tf.user_id,t.url,mt.create_time as accept_time
    from trade_flow tf,mote_task mt,task t
    where tf.user_id =#{userId} and mt.task_id= t.id and tf.refer_id=mt.id and tf.type in (1,2)
    order by tf.id desc
    limit #{start},#{pageSize}
  </select>
  
  <select id="countItemMoneyList" resultType="int" parameterType="map" >
    select  ifnull(count(1),0)
    from trade_flow tf,mote_task mt,task t
    where tf.user_id =#{userId} and mt.task_id= t.id and tf.refer_id=mt.id and tf.type in (1,2)
  </select>
  
  
  
  
</mapper>