<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuexibao.teacher.dao.FeudQuestDao" >
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from feud_quest
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="FeudQuest" >
    insert into feud_quest (id, question_real_id, student_id, 
      image_id, status, source_teacher,feud_answer_teacher_id, 
      feud_answer_detail_id, create_time, update_time
      )
    values (#{id}, #{questionRealId}, #{studentId}, 
      #{imageId}, #{status},#{sourceTeacher}, #{feudAnswerTeacherId}, 
      #{feudAnswerDetailId}, now(), now()
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="FeudQuest" >
    update feud_quest
    set question_real_id = #{questionRealId},
      student_id = #{studentId},
      image_id = #{imageId},
      status = #{status},
      feud_answer_teacher_id = #{feudAnswerTeacherId},
      feud_answer_detail_id = #{feudAnswerDetailId},
      update_time = now()
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultType="FeudQuest" parameterType="java.lang.Long" >
    select id, question_real_id, student_id, image_id, status,source_teacher, feud_answer_teacher_id, 
    feud_answer_detail_id, create_time, update_time
    from feud_quest
    where id = #{id}
  </select>
  <select id="selectAll" resultType="FeudQuest" >
    select id, question_real_id, student_id, image_id, status, source_teacher,feud_answer_teacher_id, 
    feud_answer_detail_id, create_time, update_time
    from feud_quest
  </select>
  <select id="selectFQByStudentIdAndQuestRealId" resultType="FeudQuest" parameterType="FeudQuest">
    select id, question_real_id, student_id, image_id, status,source_teacher, feud_answer_teacher_id, 
    feud_answer_detail_id, create_time, update_time
    from feud_quest where student_id =#{studentId} and question_real_id = #{questionRealId}
  </select>
   <select id="getFeudQuestList" resultType="WaitFeudListVO" parameterType="Map">
    SELECT fq.id feudQuestId,fq.question_real_id questRealId, fq.student_id,fq.source_teacher, fq.create_time as createTime, q.subject,q.learn_phase as grade,
    q.content,q.answer,q.knowledge,q.latex FROM education_biz.feud_quest fq,question q 
    where fq.question_real_id = q.real_id and q.real_subject
    in 
    <foreach item="item" index="index" collection="subjectIds" open="(" separator="," close=")">  
  			#{item}  
    </foreach>
    and (fq.source_teacher = 'common' or fq.source_teacher = #{teacherId})
    and fq.status = 1 order by fq.id desc	
    limit #{pageSize} offset #{offset}
  </select>
  
   <select id="getCommonFeudQuestList" resultType="WaitFeudListVO" parameterType="Map">
  
    SELECT fq.id feudQuestId,fq.question_real_id questRealId, fq.student_id,fq.source_teacher, fq.create_time as createTime, q.subject,q.learn_phase as grade,
    q.content,q.answer,q.knowledge,q.latex FROM education_biz.feud_quest fq,question q 
    where fq.question_real_id = q.real_id and q.real_subject
    in 
    <foreach item="item" index="index" collection="subjectIds" open="(" separator="," close=")">  
  			#{item}  
    </foreach>
    and fq.source_teacher = 'common' 
    and fq.status = 1 order by fq.id desc	
    limit #{pageSize} offset #{offset}
  </select>
  
    <select id="getFeudQuestListSelf" resultType="WaitFeudListVO" parameterType="Map">
  
    SELECT fq.id feudQuestId,fq.question_real_id questRealId, fq.student_id,fq.source_teacher, fq.create_time as createTime, q.subject,q.learn_phase as grade,
    q.content,q.answer,q.knowledge,q.latex FROM education_biz.feud_quest fq,question q 
    where fq.question_real_id = q.real_id 
    and fq.source_teacher = #{teacherId}
    and fq.status = 1 order by fq.id desc	
    limit #{pageSize} offset #{offset}
  </select>
  
  
  
  
   <select id="getResumeFeudQuestById" resultType="WaitFeudListVO" parameterType="java.lang.Long">
    SELECT fq.id feudQuestId,fq.question_real_id questRealId, fq.student_id, fq.source_teacher,fq.create_time as createTime, q.subject,q.learn_phase as grade,
    q.content,q.answer,q.knowledge,q.latex FROM education_biz.feud_quest fq,question q 
    where fq.question_real_id = q.real_id  and fq.id = #{id} 
   </select>
  
  
  
  <select id="getHomeFeudQuestListCount" resultType="Integer" parameterType="Map">
    SELECT count(1) FROM education_biz.feud_quest fq,question q 
    where fq.question_real_id = q.real_id and q.real_subject
    in 
    <foreach item="item" index="index" collection="subjectIds" open="(" separator="," close=")">  
  			#{item}  
    </foreach>
    and (fq.source_teacher = 'common' )
    and fq.status = 1 	
  </select>
  
    <select id="getHomeFeudQuestList" resultType="WaitFeudListVO" parameterType="Map">
     SELECT fq.id feudQuestId,fq.question_real_id questRealId, fq.student_id, fq.source_teacher,fq.create_time as createTime, q.subject,q.learn_phase as grade,
    q.content,q.answer,q.knowledge,q.latex FROM  education_biz.feud_quest fq,question q 
    where fq.question_real_id = q.real_id and q.real_subject
    in 
    <foreach item="item" index="index" collection="subjectIds" open="(" separator="," close=")">  
  			#{item}  
    </foreach>
    and (fq.source_teacher = 'common' )
    and fq.status = 1 	
  </select>
  
  
  
  
   <select id="getAllStatusFeudQuestListById" resultType="WaitFeudListVO" parameterType="Map">
    SELECT fq.id feudQuestId,fq.question_real_id questRealId, fq.student_id,fq.source_teacher, fq.create_time as createTime, q.subject,q.learn_phase as grade,
    q.content,q.answer,q.knowledge,q.latex FROM education_biz.feud_quest fq,question q 
    where fq.question_real_id = q.real_id and fq.id
    in 
    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
  			#{item}  
    </foreach>
   
  </select>
  
  
  
  
  <select id="getFeudQuestCountForPageHome" resultType="Integer" parameterType="String">
    SELECT count(1) FROM education_biz.feud_quest fq
    where  status = 1 		
  </select>
  
   <select id="getFeudQuestDetail" resultType="FeudQuestDetailVO" parameterType="java.lang.Long">
select fq.id feudQuestId,fq.question_real_id questRealId ,qs.learn_phase as grade,
     qs.subject,qs.answer,qs.content,qs.knowledge,qs.latex,qs.solution
    from feud_quest fq,question qs  where   qs.real_id = fq.question_real_id   and fq.id = #{feudQuestId}
  </select>
  

  <select id="getExpireStudentQuest" resultType="FeudQuest" parameterType="java.lang.Long">
    select id, question_real_id, student_id, image_id, status,  
     create_time, update_time from education_biz.feud_quest fq where  
       (fq.source_teacher = 'common' ) and 
     fq.status = 1 and  date_sub(curdate(),interval 7 day) &lt;= fq.create_time
  </select>

    <select id="getFeudTeachersIsFree" resultType="FeudTeacherIsFree" parameterType="Map">
		 select count(id) as feudTotal,source_teacher as teacherId from education_biz.feud_quest fq where 
    fq.status = 1 and 
    fq.create_time>date_add(now(),interval -60 minute) and 
    fq.source_teacher in
    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
  			#{item}  
    </foreach>
   group by source_teacher 
  </select>
  
  
  
  <select id="hasAskTeacherWithQuestion" resultType="FeudQuest" parameterType="Map">
		select id,question_real_id, student_id,source_teacher from education_biz.feud_quest fq where 
        fq.question_real_id = #{questionRealId} and student_id  = #{studentId}
  </select>
  
   <select id="getDirectFeudWithTeacher" resultType="Integer" parameterType="Map">
	select count(fq.id) from education_biz.feud_quest fq,question q  
     where fq.question_real_id = q.real_id 
    and fq.source_teacher = #{teacherId}
    and fq.status = 1;
  </select>

</mapper>