<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuexibao.teacher.dao.AudioDao">
	<select id="getRecordedList" resultType="RecordedVO">
		      select q.real_id as question_id,ifnull(q.latex,q.content) latex,q.learn_phase,
		      		 a.id,a.create_time,a.status,a.plan_type,a.org_id,
		      		 s.name as subject_text,c.evalution 
		      from audio_upload a 
		      left join question q on a.question_id = q.real_id 
		      left join subject s on q.real_subject = s.real_subject 
		      left join audio_approve c on a.id=c.audio_id 
		      where a.source=1
		      	<if test='planType=="A"'>
             			and a.org_id=#{orgId}
        		</if>
        		and (teacher_id = #{teacherId}  
        		<if test='isOrg'>
             			or a.org_teacher_id=#{teacherId}
        		</if>
        		)
        		
		      order by a.create_time desc 
		      limit #{start}, #{limit}
	</select>
	
	<select id="queryAudioById" resultType="Audio"  parameterType="String">
		<![CDATA[
		      select id,question_id,duration,name,url,subject,status,approve_time,teacher_id,create_time,update_time,type,source,org_id,org_teacher_id,plan_type,teacher_star,feud_type,wb_type
		      from audio_upload 
		      where id = #{value}
		]]>
		<!-- id,question_id,teacher_id,status,url,name -->
	</select>
	
	<select id="queryAudioByTeacherIdQuestId" resultType="Audio">
		<![CDATA[
		      select id,question_id,teacher_id,status,url,name
		      from audio_upload 
		      where teacher_id = #{param1} and question_id= #{param2} limit 1
		]]>
	</select>
	
	 <select id="getQuestDetail" resultType="AudioDetail"  parameterType="map">
	 	   select q.real_id as question_id,q.content,q.knowledge,q.solution,q.latex,q.learn_phase,a.id,a.create_time,ifnull(a.status,-1) status,
	 	   			s.name as subject_text ,a.teacher_id,a.url,a.plan_type
	       from question q  
	       left join audio_upload a on a.question_id = q.real_id and a.teacher_id=#{teacherId}
	       left join subject s on q.real_subject = s.real_subject 
		   where q.real_id=#{questionId} limit 1
	</select>
	
	<insert id="saveAudio">
		insert into audio_upload(id, question_id, org_id,org_teacher_id,duration, name, url, subject, status,teacher_id,type,plan_type,teacher_star,source, create_time,feud_type,wb_type)
		values(#{id},#{questionId},#{orgId},#{orgTeacherId},#{duration},#{name},#{url},#{subject},#{status},#{teacherId},#{type},#{planType},#{teacherStar},#{source},now(),#{feudType},#{wbType})
	</insert>
	
	
	
	<update id="updateAudio" parameterType="Audio">
		update audio_upload set duration = #{duration}, name = #{name}, url = #{url},status =#{status}, update_time = now() where id = #{id}
	</update>
	
		
	<update id="updateWbTypeUrlPayAudio" parameterType="Audio">
		update audio_upload set url = #{url},wb_type=#{wbType}, update_time = now() where id = #{id}
	</update>
	
	
	
	<update id="updateStatus" >
		update audio_upload set status = #{param2} where id = #{param1}
	</update>
	
	<select id="queryAudioByQuestionIdList" resultType="Audio" parameterType="map">
		select id,question_id
		from audio_upload 
		where question_id in
			<foreach item="item" index="index" collection="questionIdList"
      			open="(" separator="," close=")">
       		 #{item}
  			</foreach>
	</select>

	
	<select id="countAudio" resultType="int">
		<![CDATA[
		      select count(1)
		      from audio_upload 
		      where teacher_id = #{value}
		]]>
	</select>
	
	<select id="countTaskAudio" resultType="int">
		      select count(1)
		      from audio_upload 
		      where teacher_id = #{teacherId} and source=1
		      	<if test='planType=="A"'>
             			and org_id=#{orgId}
        		</if>
	</select>
</mapper> 