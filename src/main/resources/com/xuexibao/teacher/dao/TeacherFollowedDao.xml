<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuexibao.teacher.dao.TeacherFollowedDao" >
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from teacher_followed
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="TeacherFollowed" useGeneratedKeys="true" keyProperty="id">
    insert into teacher_followed ( teacher_id, user_id, 
      create_time, update_time)
    values (#{teacherId}, #{userId}, 
      now(),now())
  </insert>
  <update id="updateByPrimaryKey" parameterType="TeacherFollowed" >
    update teacher_followed
    set teacher_id = #{teacherId},
      user_id = #{userId},
      update_time = now()
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultType="TeacherFollowed"  >
    select id, teacher_id, user_id, create_time, update_time
    from teacher_followed
    where id = #{id}
  </select>
  <select id="selectAll" resultType="TeacherFollowed" >
    select id, teacher_id, user_id, create_time, update_time
    from teacher_followed
  </select>
  <delete id="deleteByTeacherIdAndUserId" parameterType="map" >
    delete from teacher_followed
    where teacher_id = #{teacherId} and user_id = #{userId}
  </delete>
  
  <select id="getTotalFollowedByTid" resultType="int" parameterType="string">
    select ifnull(count(1),0)
    from teacher_followed where teacher_id = #{teacherId}
  </select>
  
  <select id="getTotalFollowedByUserId" resultType="int" parameterType="string">
    select count(*)
    from teacher_followed where user_id = #{userId}
  </select>
  
  
  
  <select id="queryByTeacherIdsAndUserId" resultType="TeacherFollowed" parameterType="map">
    select id, teacher_id, user_id, create_time, update_time
    from teacher_followed where user_id = #{userId} and teacher_id in 
    <foreach item="item" index="index" collection="teacherIds" open="(" separator="," close=")">  
  			#{item}  
    </foreach>
  </select>
  
  <select id="isFollowed" resultType="teacherfollowed" >
    select id, teacher_id, user_id, create_time, update_time
    from teacher_followed 
    where teacher_id = #{teacherId} and user_id = #{userId}
  </select>
  
  <select id="getFollowListByUserId" resultType="TeacherFollowed" >
    select tf.id, tf.teacher_id, tf.user_id, tf.create_time, tf.update_time
    from teacher_followed tf,teacher t
    where user_id = #{studentId} and tf.teacher_id=t.id
    order by convert(t.nickname using gbk) asc
    limit #{startIndex},#{pageSize}
  </select>
  
  <select id="getFollowedTeacherIdsByUserId" resultType="string" >
    select DISTINCT teacher_id
    from teacher_followed 
    where user_id = #{userId}
  </select>
  
  <select id="getFollowedNumByTeacherIds" resultType="teacherfollowed" parameterType="map">
    select teacher_id,count(1) as teacher_followed_num
    from teacher_followed
     where teacher_id in 
    <foreach item="item" index="index" collection="teacherIds" open="(" separator="," close=")">  
  			#{item}  
    </foreach>
    group by teacher_id
  </select>
  
  
  
  
</mapper>
